// DO NOT EDIT THIS FILE. GENERATED BY svdxgen.

//go:build nrf52840

// Package uicr provides access to the registers of the UICR peripheral.
//
// Instances:
//
//	UICR  UICR_BASE  -  -  User information configuration registers
//
// Registers:
//
//	0x014 32  NRFFW[15]     Reserved for Nordic firmware design
//	0x050 32  NRFHW[12]     Reserved for Nordic hardware design
//	0x080 32  CUSTOMER[32]  Reserved for customer
//	0x200 32  PSELRESET[2]  Mapping of the nRESET function (see POWER chapter for details)
//	0x208 32  APPROTECT     Access port protection
//	0x20C 32  NFCPINS       Setting of pins dedicated to NFC functionality: NFC antenna or GPIO
//	0x210 32  DEBUGCTRL     Processor debug control
//	0x304 32  REGOUT0       GPIO reference voltage / external output supply voltage in high voltage mode
//
// Import:
//
//	github.com/embeddedgo/nrf5/p/mmap
package uicr

const (
	PIN     PSELRESET = 0x1F << 0  //+ GPIO pin number onto which nRESET is exposed
	PORT    PSELRESET = 0x01 << 5  //+ Port number onto which nRESET is exposed
	CONNECT PSELRESET = 0x01 << 31 //+ Connection
)

const (
	PINn     = 0
	PORTn    = 5
	CONNECTn = 31
)

const (
	PALL     APPROTECT = 0xFF << 0 //+ Enable or disable access port protection.
	Enabled  APPROTECT = 0x00 << 0 //  Enable
	Disabled APPROTECT = 0xFF << 0 //  Disable
)

const (
	PALLn = 0
)

const (
	PROTECT NFCPINS = 0x01 << 0 //+ Setting of pins dedicated to NFC functionality
)

const (
	PROTECTn = 0
)

const (
	CPUNIDEN    DEBUGCTRL = 0xFF << 0 //+ Configure CPU non-intrusive debug features
	IDDisabled  DEBUGCTRL = 0x00 << 0 //  Disable CPU ITM and ETM functionality
	IDEnabled   DEBUGCTRL = 0xFF << 0 //  Enable CPU ITM and ETM functionality (default behavior)
	CPUFPBEN    DEBUGCTRL = 0xFF << 8 //+ Configure CPU flash patch and breakpoint (FPB) unit behavior
	FPBDisabled DEBUGCTRL = 0x00 << 8 //  Disable CPU FPB unit. Writes into the FPB registers will be ignored.
	FPBEnabled  DEBUGCTRL = 0xFF << 8 //  Enable CPU FPB unit (default behavior)
)

const (
	CPUNIDENn = 0
	CPUFPBENn = 8
)

const (
	VOUT     REGOUT0 = 0x07 << 0 //+ Output voltage from of REG0 regulator stage. The maximum output voltage from this stage is given as VDDH - VEXDIF.
	V1_8     REGOUT0 = 0x00 << 0 //  1.8 V
	V2_1     REGOUT0 = 0x01 << 0 //  2.1 V
	V2_4     REGOUT0 = 0x02 << 0 //  2.4 V
	V2_7     REGOUT0 = 0x03 << 0 //  2.7 V
	V3_0     REGOUT0 = 0x04 << 0 //  3.0 V
	V3_3     REGOUT0 = 0x05 << 0 //  3.3 V
	Vdefault REGOUT0 = 0x07 << 0 //  Default voltage: 1.8 V
)

const (
	VOUTn = 0
)
