// DO NOT EDIT THIS FILE. GENERATED BY svdxgen.

//go:build nrf52840

// Package mmap provides base memory adresses for all peripherals.
package mmap

// AAR
const (
	AAR_BASE uintptr = 0x4000F000 // Accelerated Address Resolver
)

// ACL
const (
	ACL_BASE uintptr = 0x4001E000 // Access control lists
)

// CCM
const (
	CCM_BASE uintptr = 0x4000F000 // AES CCM Mode Encryption
)

// CC_HOST_RGF
const (
	CC_HOST_RGF_BASE uintptr = 0x5002A000 // CRYPTOCELL HOST_RGF interface
)

// CLOCK
const (
	CLOCK_BASE uintptr = 0x40000000 // Clock control
)

// COMP
const (
	COMP_BASE uintptr = 0x40013000 // Comparator
)

// CRYPTOCELL
const (
	CRYPTOCELL_BASE uintptr = 0x5002A000 // ARM TrustZone CryptoCell register interface
)

// ECB
const (
	ECB_BASE uintptr = 0x4000E000 // AES ECB Mode Encryption
)

// EGU
const (
	EGU0_BASE uintptr = 0x40014000 // Event Generator Unit 0
	EGU1_BASE uintptr = 0x40015000 // Event Generator Unit 1
	EGU2_BASE uintptr = 0x40016000 // Event Generator Unit 2
	EGU3_BASE uintptr = 0x40017000 // Event Generator Unit 3
	EGU4_BASE uintptr = 0x40018000 // Event Generator Unit 4
	EGU5_BASE uintptr = 0x40019000 // Event Generator Unit 5
)

// FICR
const (
	FICR_BASE uintptr = 0x10000000 // Factory information configuration registers
)

// FPU
const (
	FPU_BASE uintptr = 0x40026000 // FPU
)

// GPIO
const (
	P0_BASE uintptr = 0x50000000 // GPIO Port 1
	P1_BASE uintptr = 0x50000300 // GPIO Port 2
)

// GPIOTE
const (
	GPIOTE_BASE uintptr = 0x40006000 // GPIO Tasks and Events
)

// I2S
const (
	I2S_BASE uintptr = 0x40025000 // Inter-IC Sound
)

// LPCOMP
const (
	LPCOMP_BASE uintptr = 0x40013000 // Low Power Comparator
)

// MWU
const (
	MWU_BASE uintptr = 0x40020000 // Memory Watch Unit
)

// NFCT
const (
	NFCT_BASE uintptr = 0x40005000 // NFC-A compatible radio
)

// NVMC
const (
	NVMC_BASE uintptr = 0x4001E000 // Non Volatile Memory Controller
)

// PDM
const (
	PDM_BASE uintptr = 0x4001D000 // Pulse Density Modulation (Digital Microphone) Interface
)

// POWER
const (
	POWER_BASE uintptr = 0x40000000 // Power control
)

// PPI
const (
	PPI_BASE uintptr = 0x4001F000 // Programmable Peripheral Interconnect
)

// PWM
const (
	PWM0_BASE uintptr = 0x4001C000 // Pulse width modulation unit 0
	PWM1_BASE uintptr = 0x40021000 // Pulse width modulation unit 1
	PWM2_BASE uintptr = 0x40022000 // Pulse width modulation unit 2
	PWM3_BASE uintptr = 0x4002D000 // Pulse width modulation unit 3
)

// QDEC
const (
	QDEC_BASE uintptr = 0x40012000 // Quadrature Decoder
)

// QSPI
const (
	QSPI_BASE uintptr = 0x40029000 // External flash interface
)

// RADIO
const (
	RADIO_BASE uintptr = 0x40001000 // 2.4 GHz radio
)

// RNG
const (
	RNG_BASE uintptr = 0x4000D000 // Random Number Generator
)

// RTC
const (
	RTC0_BASE uintptr = 0x4000B000 // Real time counter 0
	RTC1_BASE uintptr = 0x40011000 // Real time counter 1
	RTC2_BASE uintptr = 0x40024000 // Real time counter 2
)

// SAADC
const (
	SAADC_BASE uintptr = 0x40007000 // Successive approximation register (SAR) analog-to-digital converter
)

// SPI
const (
	SPI0_BASE uintptr = 0x40003000 // Serial Peripheral Interface 0
	SPI1_BASE uintptr = 0x40004000 // Serial Peripheral Interface 1
	SPI2_BASE uintptr = 0x40023000 // Serial Peripheral Interface 2
)

// SPIM
const (
	SPIM0_BASE uintptr = 0x40003000 // Serial Peripheral Interface Master with EasyDMA 0
	SPIM1_BASE uintptr = 0x40004000 // Serial Peripheral Interface Master with EasyDMA 1
	SPIM2_BASE uintptr = 0x40023000 // Serial Peripheral Interface Master with EasyDMA 2
	SPIM3_BASE uintptr = 0x4002F000 // Serial Peripheral Interface Master with EasyDMA 3
)

// SPIS
const (
	SPIS0_BASE uintptr = 0x40003000 // SPI Slave 0
	SPIS1_BASE uintptr = 0x40004000 // SPI Slave 1
	SPIS2_BASE uintptr = 0x40023000 // SPI Slave 2
)

// SWI
const (
	SWI0_BASE uintptr = 0x40014000 // Software interrupt 0
	SWI1_BASE uintptr = 0x40015000 // Software interrupt 1
	SWI2_BASE uintptr = 0x40016000 // Software interrupt 2
	SWI3_BASE uintptr = 0x40017000 // Software interrupt 3
	SWI4_BASE uintptr = 0x40018000 // Software interrupt 4
	SWI5_BASE uintptr = 0x40019000 // Software interrupt 5
)

// TEMP
const (
	TEMP_BASE uintptr = 0x4000C000 // Temperature Sensor
)

// TIMER
const (
	TIMER0_BASE uintptr = 0x40008000 // Timer/Counter 0
	TIMER1_BASE uintptr = 0x40009000 // Timer/Counter 1
	TIMER2_BASE uintptr = 0x4000A000 // Timer/Counter 2
	TIMER3_BASE uintptr = 0x4001A000 // Timer/Counter 3
	TIMER4_BASE uintptr = 0x4001B000 // Timer/Counter 4
)

// TWI
const (
	TWI0_BASE uintptr = 0x40003000 // I2C compatible Two-Wire Interface 0
	TWI1_BASE uintptr = 0x40004000 // I2C compatible Two-Wire Interface 1
)

// TWIM
const (
	TWIM0_BASE uintptr = 0x40003000 // I2C compatible Two-Wire Master Interface with EasyDMA 0
	TWIM1_BASE uintptr = 0x40004000 // I2C compatible Two-Wire Master Interface with EasyDMA 1
)

// TWIS
const (
	TWIS0_BASE uintptr = 0x40003000 // I2C compatible Two-Wire Slave Interface with EasyDMA 0
	TWIS1_BASE uintptr = 0x40004000 // I2C compatible Two-Wire Slave Interface with EasyDMA 1
)

// UART
const (
	UART0_BASE uintptr = 0x40002000 // Universal Asynchronous Receiver/Transmitter
)

// UARTE
const (
	UARTE0_BASE uintptr = 0x40002000 // UART with EasyDMA 0
	UARTE1_BASE uintptr = 0x40028000 // UART with EasyDMA 1
)

// UICR
const (
	UICR_BASE uintptr = 0x10001000 // User information configuration registers
)

// USBD
const (
	USBD_BASE uintptr = 0x40027000 // Universal serial bus device
)

// WDT
const (
	WDT_BASE uintptr = 0x40010000 // Watchdog Timer
)
